
@model Discography.Models.ArtistSearchModel

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
<div class="form-horizontal">

    @Html.HiddenFor(model => model.ArtistName)
    @Html.HiddenFor(model => model.CurrentPage)
    @Html.HiddenFor(model => model.PageCount)

    <div class="form-group">
        <h2>Search Results</h2>
        <div>
            Found @Html.DisplayFor(model => model.ArtistCount) results for "@Html.DisplayFor(model => model.ArtistName)"
        </div>

        <div id="progressText" style="@("display:none")">
            <span id="job-status"></span>
        </div>
    </div>
    
    <div class="form-group">
        <table style="width: 100%;">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Country</th>
                </tr>
            </thead>

            <tbody>

                @foreach (var item in Model.Results)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(@item.Name, "ArtistStatistics", "Statistics", new { artistId = item.Id }, null)
                        </td>

                        <td>
                            @item.Disambiguation
                        </td>

                        <td>
                            @item.Type
                        </td>

                        <td>
                            @item.Country
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="form-group">
        <input type="submit" @(!Model.ShowPrevious ? "disabled='disabled'" : "") value="Previous" formaction="@Url.Action("PreviousPage", "Search")" formmethod="post" class="btn" />
        <input type="submit" @(!Model.ShowNext ? "disabled='disabled'" : "") value="Next" formaction="@Url.Action("NextPage", "Search")" formmethod="post" class="btn" />
    </div>
</div>

@section Scripts
{
    <script src="~/lib/signalr/signalr.js"></script>
    <script>
        document.head || (document.head = document.getElementsByTagName('head')[0]);

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/resultFeedback")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on("displayFeedback",
            (statusText) => {
                document.getElementById("progressText").style.display = "inline-block";
                document.getElementById("job-status").innerText = `${statusText}`;
            });
        connection.start()
            .catch(err => console.error(err.toString()));
    </script>
}
}
